all: apps man
APPS = src/fdns src/nxdomain
MANPAGES = fdns.1 nxdomain.1

prefix=@prefix@
exec_prefix=@exec_prefix@
bindir=@bindir@
libdir=@libdir@
datarootdir=@datarootdir@
mandir=@mandir@
sysconfdir=@sysconfdir@

VERSION=@PACKAGE_VERSION@
NAME=@PACKAGE_NAME@
PACKAGE_TARNAME=@PACKAGE_TARNAME@
DOCDIR=@docdir@
HAVE_APPARMOR=@HAVE_APPARMOR@
SYSTEMD_DIR=@SYSTEMD_DIR@

.PHONY: apps $(APPS)
apps: $(APPS)
$(APPS): $(LIBS)
	$(MAKE) -C $@

$(MANPAGES): $(wildcard src/man/*.txt)
	./mkman.sh $(VERSION) src/man/$(basename $@).txt $@

man: $(MANPAGES)

clean:
	rm -f gcov-file gcov-file-new gcov-file-old
	for dir in $(APPS); do \
		$(MAKE) -C $$dir clean; \
	done
	rm -f $(MANPAGES) $(MANPAGES:%=%.gz)
	cd test/compile; ./compile.sh --clean; cd ../..

distclean: clean
	for dir in $(APPS); do \
		$(MAKE) -C $$dir distclean; \
	done
	rm -fr Makefile autom4te.cache config.log config.status config.h src/common.mk
	rm -fr src/cashpack-0.3

realinstall:
	# fdns executable
	install -m 0755 -d $(DESTDIR)/$(bindir)
	install -c -m 0755 src/fdns/fdns $(DESTDIR)/$(bindir)/.
	install -c -m 0755 src/nxdomain/nxdomain $(DESTDIR)/$(bindir)/.
	# documents
	install -m 0755 -d $(DESTDIR)/$(DOCDIR)
	install -c -m 0644 COPYING $(DESTDIR)/$(DOCDIR)/.
	install -c -m 0644 README $(DESTDIR)/$(DOCDIR)/.
	install -c -m 0644 RELNOTES $(DESTDIR)/$(DOCDIR)/.
	# etc files
	install -m 0755 -d $(DESTDIR)$(sysconfdir)/fdns
	install -m 0644 -t $(DESTDIR)$(sysconfdir)/fdns etc/adblocker etc/coinblocker etc/fp-trackers  etc/phishing etc/tld-blacklist etc/resolver.seccomp
	install -m 0644 -t $(DESTDIR)$(sysconfdir)/fdns etc/servers etc/trackers
	# install server cusomization file
	sh -c "if [ ! -f $(DESTDIR)/$(sysconfdir)/fdns/servers.local ]; then install -c -m 0644 etc/servers.local $(DESTDIR)/$(sysconfdir)/fdns/servers.local; fi;"

	# systemd service unit
	install -Dm0644 etc/fdns.service $(DESTDIR)$(SYSTEMD_DIR)/fdns.service
	# man pages
	echo "**********************************"
	echo $(MANPAGES)
	echo "**********************************"
	install -m 0755 -d $(DESTDIR)/$(mandir)/man1
	for man in $(MANPAGES); do \
		rm -f $$man.gz; \
		gzip -9n $$man; \
		case "$$man" in \
			*.1) install -c -m 0644 $$man.gz $(DESTDIR)/$(mandir)/man1/; ;; \
		esac; \
	done
	rm -f $(MANPAGES) $(MANPAGES:%=%.gz)
	# bash completion
	install -m 0755 -d $(DESTDIR)/$(datarootdir)/bash-completion/completions
	install -c -m 0644 src/bash_completion/fdns.bash_completion $(DESTDIR)/$(datarootdir)/bash-completion/completions/fdns
ifeq ($(HAVE_APPARMOR),-DHAVE_APPARMOR)
	# apparmor profile
	sh -c "if [ ! -d $(DESTDIR)/$(sysconfdir)/apparmor.d ]; then install -d -m 755 $(DESTDIR)/$(sysconfdir)/apparmor.d; fi;"
	sh -c "if [ ! -d $(DESTDIR)/$(sysconfdir)/apparmor.d/local ]; then install -d -m 755 $(DESTDIR)/$(sysconfdir)/apparmor.d/local; fi;"
	install -c -m 0644 etc/apparmor/usr.bin.fdns $(DESTDIR)/$(sysconfdir)/apparmor.d/.
	install -c -m 0644 etc/apparmor/fdns-local $(DESTDIR)/$(sysconfdir)/apparmor.d/local/usr.bin.fdns
endif

install: all
	$(MAKE) realinstall

install-strip: all
	strip src/fdns/fdns
	strip src/nxdomain/nxdomain
	$(MAKE) realinstall

uninstall:
	rm -f $(DESTDIR)/$(bindir)/fdns
	rm -f $(DESTDIR)/$(bindir)/nxdomain
	rm -fr $(DESTDIR)/$(datarootdir)/doc/fdns
	for man in $(MANPAGES); do \
		rm -f $(DESTDIR)/$(mandir)/man1/$$man*; \
	done
	rm -f $(DESTDIR)/$(datarootdir)/bash-completion/completions/fdns

DISTFILES = "src etc platform test configure configure.ac Makefile.in install.sh mkman.sh mkdeb.sh COPYING README RELNOTES"

dist:
	mv config.status config.status.old
	make distclean
	mv config.status.old config.status
	rm -fr $(NAME)-$(VERSION) $(NAME)-$(VERSION).tar.xz
	mkdir $(NAME)-$(VERSION)
	cp -a "$(DISTFILES)" $(NAME)-$(VERSION)
	rm -rf $(NAME)-$(VERSION)/src/tools
	rm -rf $(NAME)-$(VERSION)/src/cashpack-0.3.tar.gz
	find $(NAME)-$(VERSION) -name .svn -delete
	tar -cJvf $(NAME)-$(VERSION).tar.xz $(NAME)-$(VERSION)
	rm -fr $(NAME)-$(VERSION)

asc:; ./mkasc.sh $(VERSION)

deb: dist
	./mkdeb.sh $(NAME) $(VERSION)

cppcheck: clean
	cppcheck --force .

filtercheck:; ./filtercheck.sh

scan-build: clean
	NO_EXTRA_CFLAGS="yes" scan-build make

test-fdns:
	cd test/fdns;su -c ./test.sh | grep TESTING

test: test-fdns
	echo "TEST COMPLETE"

test-compile: dist
	cd test/compile; ./compile.sh $(NAME)-$(VERSION)

gcov:
	su -c ./gcov.sh
