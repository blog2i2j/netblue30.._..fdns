.TH FDNS 1 "MONTH YEAR" "VERSION" "fdns man page"
.SH NAME
fdns \- Firejail DNS over HTTPS/TLS proxy
.SH SYNOPSIS
Start the server (root user):
.PP
.RS
fdns [OPTIONS]
.RE

Start the monitor (regular user):
.PP
.RS
fdns --monitor
.RE

.SH DESCRIPTION
FDNS is a lightweight encrypted DNS proxy designed for small networks and Linux desktops.
The proxy implements caching, a DNS firewall, and uses configurable adblocker and privacy filters.

Out of the box, the proxy comes with a large number of non-logging and non-censoring DoH/DoT/DoQ service providers.
At startup, it chooses a server at random, as close geographically as possible.
The computer's location is determined by the time zone setting.

.SH OPTIONS
.TP
\fB\-\-allow-all-queries
Allow all DNS query types; by default only A and HTTPS Specific Service Endpoint queries are allowed. In case --ipv6 is set,
AAAA queries are also allowed.
.TP
\fB\-\-allow-expired-certs
Allow expired SSL certificates during SSL connection.
.TP
\fB\-\-allow-self-signed-certs
Allow self-signed SSL certificates during SSL connection. Use this option for bringing up new servers.
.TP
\fB\-\-blocklist-file=filename
Load an additional blocklist file at startup. Up to 8 such files can be loaded.
The blocklists are regular 127.0.0.1 or 0.0.0.0 host files. All domains in the file
are considered wildcard domains. Example:
.br

.br
$ sudo fdns --blocklist=/usr/fdns/newblocklist
.br

.br
Note: If AppArmor is enabled, please place your files additional files in /etc/fdns directory.
.TP
\fB\-\-certfile=filename
Use an SSL certificate file in PEM format. By default we use the certificates installed
by OpenSSL.
.br

.br
Example:
.br
$ sudo fdns --certfile=/etc/ssl/certs/ca-certificates.crt
.TP
\fB\-\-daemonize
Detach from the controlling terminal and run as a Unix daemon. Example:
.br

.br
$ sudo fdns --daemonize
.br
.TP
\fB\-\-debug
Print debug messages.
.TP
\fB\-\-debug-transport
Print transport layer debug messages.
.TP
\fB\-\-details
SSL connection information, HTTP headers and network traces are printed on the screen during the testing
phase of the connection establishment.
.br

.br
Example:
.br
$ fdns --test-server=cloudflare --details
.br
Testing server cloudflare
.br
   Tags: anycast, Americas, AsiaPacific, Europe
.br
   URL: https://cloudflare-dns.com/dns-query
.br
   Bootstrap IP address: 1.1.1.1
.br
   Port: 443
.br
   TLSv1.3, ALPN h2, SNI no
.br

.br
   HTTP Header:
.br
-----------------------------
.br
|  (HPACK dynamic table size: 4096)
.br
|  :status:  200
.br
|  server:   cloudflare
.br
|  date:   Mon, 19 Jun 2023 11:20:53 GMT
.br
|  content-type:   application/dns-message
.br
|  access-control-allow-origin:   *
.br
|  content-length:   77
.br
|  cf-ray:  7d9b62a62ff3ff84-BOS
.br
-----------------------------
.br
   SSL/TLS connection: 519.42 ms
.br

.br
   Network Trace:
.br
-----> rx 60 bytes: IP + TCP + TLS + H2-WINDOW-UPDATE
.br
-----> rx 187 bytes: IP + TCP + TLS + H2-HEADERS + H2-DATA  (end stream)
.br

.br
   DoH query average: 64.38 ms
.br
   Header uncompressed | compressed | ratio:  185 | 28 | 6.61:1
.br
   DoH/Do53 bandwidth ratio: 2.50
.br
   Keepalive: 40 seconds
.br

.br
Testing completed
.TP
\fB\-\-fallback-server=address
In case the main DoH/DoT server is down, use this regular DNS/UDP server for fallback.
By default we test and chose the fastes server from the following list:
Adguard, CleanBrowsing, Cloudflare, NextDNS, and Quad9.
.br

.br
Example:
.br
$ sudo fdns --fallback-server=66.70.228.164
.br
.TP
\fB\-\-forwarder=domain@address
Conditional domain forwarding to a different DNS server.
.br

.br
Example:
.br
$ sudo fdns --forwarder=libre@66.70.228.164
.br

.br
The proxy will forward all .libre domains to OpenNIC server at 66.70.228.164.

.TP
\fB\-\-help, \-?, \-h
Print command-line options and exit.
.TP
\fB\-\-ipv6
Allow AAAA requests. Use this option if you have Internet IPv6 connectivity. By default IPv6 queries are disabled.


.TP
\fB\-\-keepalive=value
Use this session keepalive value instead of the one in the server file. A query for example.com domain is initiated if there is
no DNS query activity in order to keep the HTTP2 connection open. For most servers we are using values between 25 and 40 seconds.
In many cases you can bump the keepalive above 120 seconds.
.br

.br
Example:
.br
$ sudo fdns --keepalive=120 --server=coudflare
.TP
\fB\-\-list[=server-name|tag|all]
List the DoH service providers available in your current zone, or specific servers based on names or tags.
.br

.br
Example:
.br
$ fdns --list
.br
Current zone: Europe
.br
42l - France, Europe
.br
	https://42l.fr
.br
aaflalo - Netherlands, Europe, adblocker
.br
	https://www.aaflalo.me
.br
appliedprivacy - Austria, Europe
.br
	https://appliedprivacy.net
.br
bortzmeyer - France, Europe
.br
	https://www.bortzmeyer.org/doh-bortzmeyer-fr-policy.html
.br
cznic - Czechia, Europe
.br
	https://www.nic.cz/odvr/
.br
[...]
.TP
\fB\-\-monitor[=proxy-address]
Start the stats monitor in a regular terminal. Without specifying an IP address, the monitor is looking for a proxy at 127.1.1.1.
.br

.br
Example:
.br
$ fdns --monitor
.br
$ fdns --monitor=127.2.2.2
.TP
\fB\-\-nofilter
No DNS request filtering. This disables all domain filters (adblocker, trackers, etc.)
and the user hosts file installed in /etc/fdns directory.

.TP
\fB\-\-proxies
List all running instances of FDNS.
.br

.br
Example:
.br
$ fdns --proxies
.br
pid 4900, address 127.3.3.3
.br
pid 4893, address 127.2.2.2
.br
pid 4883, address 127.1.1.1 (default)
.TP
\fB\-\-proxy-addr=address
Configure the IP address the proxy listens on for
DNS queries coming from the local clients. The default is 127.1.1.1.
.br

.br
Example:
.br
$ sudo fdns --proxy-addr=127.0.0.1
.TP
\fB\-\-resolvers=number
The number of resolver processes, between 1 and 10, default 2.
.TP
\fB\-\-server=server-name|tag|all|url
Connect to a specific server, or to a random one based on the tag and your geographical location.
Using "all" will instruct FDNS to chose a server at random from the list, regardless where
the server is located. You can also specify a DoH URL for servers not yet supported by FDNS.
.br

.br
Examples:
.br
$ sudo fdns --server=cloudflare
.br
$ sudo fdns --server=security
.br
$ sudo fdns --server=family
.br
$ sudo fdns --server=https://dns.google/dns-query
.br
$ sudo fdns --server=dot://dot1.applied-privacy.net
.br
$ sudo fdns --server=quic://dns.adguard.com
.br


.TP
\fB\-\-server-list=filename
Specify a list of servers, default /etc/fdns/servers.
If the program is confined by AppArmor, place this file in /etc/fdns directory.
Access to most other directories is blocked.
.br

.br
Example:
.br
$ fdns --server-list=/etc/fdns/newlist
.br
.TP
\fB\-\-test-server[=server-name|tag|all]
Test all the servers from your geographical zone. You can also request a specific server or tag.
.br

.br
Example:
.br
$ fdns --test-server
.br
Testing server adguard
.br
	SSL connection opened in 281.80 ms
.br
	DoH response average 55.44 ms
.br
Testing server cleanbrowsing
.br
	SSL connection opened in 281.73 ms
.br
	DoH response average 57.90 ms
.br
Testing server cloudflare
.br
	SSL connection opened in 251.37 ms
.br
	DoH response average 58.23 ms
.br
Testing server dnscrypt-ca
.br
	SSL connection opened in 421.59 ms
.br
	DoH response average 83.51 ms
.br
[...]
.br

.br
$ fdns --test-server=digital-society
.br
   SSL connection opened in 640.53 ms
.br
   DoH response average 155.22 ms
.br
.TP
\fB\-\-test-url=URL
Check if URL is dropped by the adblock/tracker filters.
.br

.br
Example:
.br
$ fdns --test-url=amazon-adsystem.com
.br
URL amazon-adsystem.com dropped by "amazon-adsystem.com" rule
.TP
\fB\-\-test-url-list
Check URLs as they are introduced on STDIN.
.br

.br
Example:
.br
$ cat biglist.txt | fdns --test-url-list
.br
.TP
\fB\-\-version
Print program version and exit.
.TP
\fB\-\-whitelist=domain
Whitelist mode: resolve only the specified domains and drop everything else.
.br

.br
Example:
.br
$ sudo fdns --whitelist=gentoo.org \\
      --whitelist=assets.gentoo.org \\
      --whitelist=security.gentoo.org \\
      --whitelist=wiki.gentoo.org
.TP
\fB\-\-whitelist-file=file-name
Similar to \-\-whitelist above, it gets the domains from a file. If running under AppArmor, put the file under /etc/fdns directory.
This is the only directory allowed by our AppArmor profile.
.br

.br
Example:
.br
$ cat /etc/fdns/whitelist-gentoo
.br
# whitelist file for gentoo.org
.br
gentoo.org
.br
assets.gentoo.org
.br
security.gentoo.org
.br
wiki.gentoo.org
.br

.br
$ sudo fdns --whitelist-file=/etc/fdns/whitelist-gentoo

.SH Setup FDNS on a workstation
You would need to set FDNS as your DNS server in /etc/resolv.conf:
.br

.br
.PP
.RS
$ cat /etc/resolv.conf
.br
nameserver 127.1.1.1
.br

.br
.RE
You can also use Firejail security sandbox to redirect all the DNS traffic to 127.1.1.1,
where FDNS listens by default. Firejail decouples the DNS functionality, allowing each
sandbox to have its own DNS setting. Your system DNS configuration is not touched.
If things go wrong, you won't lose your Internet connectivity. Here are the steps:



.TP
\fBStart FDNS:
$ sudo fdns
.TP
\fBStart your applications in Firejail:
$ firejail --dns=127.1.1.1 firefox
.br
$ firejail --dns=127.1.1.1 transmission-qt
.br
.TP
\fBStart the monitor:
$ fdns --monitor
.br
.br
.SH Setup FDNS as a network server
Example assuming 192.168.1.44 is the IP address of your network interface:
.PP
.RS
$ sudo fdns --proxy-addr=192.168.1.44 --daemonize
.br

.br
.RE
You can also add a specific tag as --server=security or --server=family.
.SH FAQ

.TP
\fBHow do I start FDNS when I power-on the computer?
The command you need to run at  startup is
.br

.br
# /usr/bin/fdns --daemonize
.br

.br
Include this command in your system startup scripts. If your system uses Systemd (Debian/.Ubuntu/Arch/RedHat etc.),
enable the fdns.service unit provided in /etc/fdns/fdns.service.
.br

.br
$ sudo systemctl enable --now fdns.service
.br

.TP
\fBHow do I configure Firejail to send all the DNS traffic to FDNS by default?
As root user, add the following two lines in /etc/firejail/globals.local. If the file doesn't exist, create it:
.br

.br
$ cat /etc/firejail/globals.local
.br
dns 127.1.1.1
.br
ignore dns
.br

.TP
\fBHow do I save a list with all the DNS requests?
Start FDNS this way:
.br

.br
$ sudo fdns | tee dnslist.txt
.br

.TP
\fBHow do I check FDNS is running in the background?
Use "--proxies" command to list all FDNS proxies running on your computer:
.br

.br
$ fdns --proxies
.br
pid 12062, address 127.1.1.1 (default)
.br

.br
Or run ss and look for sockets open on port 53:
.br

.br
$ sudo ss -nulp
.br
State     Recv-Q    Send-Q       Local Address:Port        Peer Address:Port
.br
UNCONN    0         0                127.1.1.1:53               0.0.0.0:*        users:(("fdns",pid=4227,fd=11))
.br
UNCONN    0         0                127.1.1.1:53               0.0.0.0:*        users:(("fdns",pid=4226,fd=9))
.br
UNCONN    0         0                127.1.1.1:53               0.0.0.0:*        users:(("fdns",pid=4225,fd=7))
.br


.TP
\fBHow do I shut down FDNS?
$ sudo pkill fdns
.br

.SH FILES
/etc/fdns/list.* - domain filters distributed with FDNS
.br
/etc/fdns/fdns.service - systemd service file
.br
/etc/fdns/hosts - user hosts file
.br
/etc/fdns/resolver.seccomp - seccomp filter applied to resolver processes
.br
/etc/fdns/servers - DoH/DoT servers FDNS knows about

.SH LICENSE
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
.PP
Homepage: https://firejaildns.wordpress.com
.br
Development: https://github.com/netblue30/fdns

.SH SEE ALSO
.BR dnsc (1),
.BR nxdomain (1)


